#include "Rules.h"

GameRules^ GameRules::instance = nullptr;

GameRules::GameRules()
{
    rulesText = "ѕравила игры в Ќарды:\n\n";
    rulesText += "÷ель игры: ѕереместить все свои шашки в свой дом и затем 'сн€ть' их с доски.\n\n";
    rulesText += "Ќачальна€ расстановка:  ажда€ сторона имеет 15 шашек. »грок 1 (черные) начинает с 2 шашек на 24-м поле, 5 на 13-м, 3 на 8-м и 5 на 6-м. »грок 2 (белые) начинает с 2 шашек на 1-м поле, 5 на 12-м, 3 на 17-м и 5 на 19-м.\n\n";
    rulesText += "’од: »гроки по очереди бросают два кубика и перемещают шашки на количество полей, выпавшее на каждом кубике. ћожно использовать оба значени€ дл€ одной шашки или переместить две разные шашки.\n\n";
    rulesText += "ƒубль: ≈сли на кубиках выпадает одинаковое число (дубль), игрок может сделать четыре хода на это число.\n\n";
    rulesText += "«ан€тое поле: Ўашку можно переместить на поле, если на нем нет шашек противника, или есть только одна шашка противника (блокада).\n\n";
    rulesText += "¬з€тие: ≈сли шашка попадает на поле, зан€тое одной шашкой противника, шашка противника 'бьетс€' и помещаетс€ на 'бар'.\n\n";
    rulesText += "Ѕар: Ўашки на баре должны быть введены обратно на доску с начальных полей противника (дл€ игрока 1 - пол€ 1-6, дл€ игрока 2 - пол€ 19-24). ƒл€ этого нужно выбросить число на кубике, соответствующее свободному полю в доме противника. ѕока на баре есть шашки, игрок об€зан ходить только ими.\n\n";
    rulesText += "ƒом: ƒом игрока 1 - пол€ 1-6, дом игрока 2 - пол€ 19-24.\n\n";
    rulesText += "—н€тие шашек:  огда все шашки игрока наход€тс€ в его доме, он может начать 'снимать' их с доски. ƒл€ этого нужно выбросить на кубике число, равное рассто€нию от шашки до кра€ доски. ≈сли выпавшее число больше необходимого, можно сн€ть шашку с самого дальнего пол€, на котором есть шашка.\n\n";
    rulesText += "ѕобеда: ѕобеждает игрок, который первым снимет все свои шашки с доски.";
}

GameRules^ GameRules::GetInstance()
{
    if (instance == nullptr)
    {
        instance = gcnew GameRules();
    }
    return instance;
}

System::String^ GameRules::GetRules()
{
    return rulesText;
}